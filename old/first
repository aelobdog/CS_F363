program -> otherFunctions mainFunction
mainFunction -> TK_MAIN stmts TK_END
otherFunctions -> function otherFunctions
otherFunctions -> eps
function -> TK_FUNID input_par output_par TK_SEM stmts TK_END
input_par -> TK_INPUT TK_PARAMETER TK_LIST TK_SQL parameter_list TK_SQR
output_par -> TK_OUTPUT TK_PARAMETER TK_LIST TK_SQL parameter_list TK_SQR
output_par -> eps
parameter_list -> dataType TK_ID remaining_list
dataType -> primitiveDatatype
dataType -> constructedDatatype
primitiveDatatype -> TK_INT
primitiveDatatype -> TK_REAL
constructedDatatype -> TK_RECORD TK_RUID
constructedDatatype -> TK_UNION TK_RUID
constructedDatatype -> TK_RUID
remaining_list -> TK_COMMA parameter_list
remaining_list -> eps
stmts -> typeDefinitions declarations otherStmts returnStmt
typeDefinitions -> actualOrRedefined typeDefinitions
typeDefinitions -> eps
actualOrRedefined -> typeDefinition
actualOrRedefined -> definetypestmt
typeDefinition -> TK_RECORD TK_RUID fieldDefinitions TK_ENDRECORD
typeDefinition -> TK_UNION TK_RUID fieldDefinitions TK_ENDUNION
fieldDefinitions -> fieldDefinition fieldDefinition moreFields
fieldDefinition -> TK_TYPE fieldtype TK_COLON TK_FIELDID TK_SEM
fieldtype -> primitiveDatatype
fieldtype -> TK_RUID
moreFields -> fieldDefinition moreFields
moreFields -> eps
declarations -> declaration declarations
declarations -> eps
declaration -> TK_TYPE dataType TK_COLON TK_ID global_or_not TK_SEM
global_or_not -> TK_COLON TK_GLOBAL
global_or_not -> eps
otherStmts -> stmt otherStmts
otherStmts -> eps
stmt -> assignmentStmt
stmt -> iterativeStmt
stmt -> conditionalStmt
stmt -> ioStmt
stmt -> funCallStmt
assignmentStmt -> singleOrRecId TK_ASSIGNOP arithmeticExpression TK_SEM
singleOrRecId -> TK_ID constructedVariable
constructedVariable -> oneExpansion moreExpansions
constructedVariable -> eps
oneExpansion -> TK_DOT TK_FIELDID
moreExpansions -> oneExpansion moreExpansions
moreExpansions -> eps
funCallStmt -> outputParameters TK_CALL TK_FUNID TK_WITH TK_PARAMETERS inputParameters TK_SEM
outputParameters -> TK_SQL idList TK_SQR TK_ASSIGNOP
outputParameters -> eps
inputParameters -> TK_SQL idList TK_SQR
iterativeStmt -> TK_WHILE TK_OP booleanExpression TK_CL stmt otherStmts TK_ENDWHILE
conditionalStmt -> TK_IF TK_OP booleanExpression TK_CL TK_THEN stmt otherStmts elsePart
elsePart -> TK_ELSE stmt otherStmts TK_ENDIF
elsePart -> TK_ENDIF
ioStmt -> TK_READ TK_OP var TK_CL TK_SEM
ioStmt -> TK_WRITE TK_OP var TK_CL TK_SEM
arithmeticExpression -> term expPrime
expPrime -> lowPrecedenceOperators term expPrime
expPrime -> eps
term -> factor termPrime
termPrime -> highPrecedenceOperator factor termPrime
termPrime -> eps
factor -> TK_OP arithmeticExpression TK_CL
factor -> var
highPrecedenceOperator -> TK_MUL
highPrecedenceOperator -> TK_DIV
lowPrecedenceOperators -> TK_PLUS
lowPrecedenceOperators -> TK_MINUS
booleanExpression -> TK_OP booleanExpression TK_CL logicalOp TK_OP booleanExpression TK_CL
booleanExpression -> var relationalOp var
booleanExpression -> TK_NOT TK_OP booleanExpression TK_CL
var -> singleOrRecId
var -> TK_NUM
var -> TK_RNUM
logicalOp -> TK_AND
logicalOp -> TK_OR
relationalOp -> TK_LT
relationalOp -> TK_LE
relationalOp -> TK_EQ
relationalOp -> TK_GT
relationalOp -> TK_GE
relationalOp -> TK_NE
returnStmt -> TK_RETURN optionalReturn TK_SEM
optionalReturn -> TK_SQL idList TK_SQR
optionalReturn -> eps
idList -> TK_ID more_ids
more_ids -> TK_COMMA idList
more_ids -> eps
definetypestmt -> TK_DEFINETYPE A TK_RUID TK_AS TK_RUID
A -> TK_RECORD
A -> TK_UNION
--------------

First Sets
program = { TK_FUNID TK_MAIN }
mainFunction = { TK_MAIN }
otherFunctions = { TK_FUNID eps }
function = { TK_FUNID }
input_par = { TK_INPUT }
output_par = { TK_OUTPUT eps }
parameter_list = { TK_INT TK_REAL TK_RECORD TK_UNION TK_RUID }
dataType = { TK_INT TK_REAL TK_RECORD TK_UNION TK_RUID }
primitiveDatatype = { TK_INT TK_REAL }
constructedDatatype = { TK_RECORD TK_UNION TK_RUID }
remaining_list = { TK_COMMA eps }
stmts = { TK_RECORD TK_UNION TK_DEFINETYPE TK_TYPE TK_ID TK_WHILE TK_IF TK_READ TK_WRITE TK_SQL TK_CALL TK_RETURN }
typeDefinitions = { TK_RECORD TK_UNION TK_DEFINETYPE eps }
actualOrRedefined = { TK_RECORD TK_UNION TK_DEFINETYPE }
typeDefinition = { TK_RECORD TK_UNION }
fieldDefinitions = { TK_TYPE }
fieldDefinition = { TK_TYPE }
fieldtype = { TK_INT TK_REAL TK_RUID }
moreFields = { TK_TYPE eps }
declarations = { TK_TYPE eps }
declaration = { TK_TYPE }
global_or_not = { TK_COLON eps }
otherStmts = { TK_ID TK_WHILE TK_IF TK_READ TK_WRITE TK_SQL TK_CALL eps }
stmt = { TK_ID TK_WHILE TK_IF TK_READ TK_WRITE TK_SQL TK_CALL }
assignmentStmt = { TK_ID }
singleOrRecId = { TK_ID }
constructedVariable = { TK_DOT eps }
oneExpansion = { TK_DOT }
moreExpansions = { TK_DOT eps }
funCallStmt = { TK_SQL TK_CALL }
outputParameters = { TK_SQL eps }
inputParameters = { TK_SQL }
iterativeStmt = { TK_WHILE }
conditionalStmt = { TK_IF }
elsePart = { TK_ELSE TK_ENDIF }
ioStmt = { TK_READ TK_WRITE }
arithmeticExpression = { TK_OP TK_ID TK_NUM TK_RNUM }
expPrime = { TK_PLUS TK_MINUS eps }
term = { TK_OP TK_ID TK_NUM TK_RNUM }
termPrime = { TK_MUL TK_DIV eps }
factor = { TK_OP TK_ID TK_NUM TK_RNUM }
highPrecedenceOperator = { TK_MUL TK_DIV }
lowPrecedenceOperators = { TK_PLUS TK_MINUS }
booleanExpression = { TK_OP TK_ID TK_NUM TK_RNUM TK_NOT }
var = { TK_ID TK_NUM TK_RNUM }
logicalOp = { TK_AND TK_OR }
relationalOp = { TK_LT TK_LE TK_EQ TK_GT TK_GE TK_NE }
returnStmt = { TK_RETURN }
optionalReturn = { TK_SQL eps }
idList = { TK_ID }
more_ids = { TK_COMMA eps }
definetypestmt = { TK_DEFINETYPE }
A = { TK_RECORD TK_UNION }
