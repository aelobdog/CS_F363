 
 _ssmN 
 input parameter list [int d5];
     record #ass
 		type real: su; 
 		type #fuckme: ics;
 	endrecord
 
  record #gas
 		type real: su; 
 		type #gogobebe: ics;
 	endrecord

  type real: d2;
 
     return;
 end

_spmN 
input parameter list [int d5]
output parameter list [int b3];
    record #asds
		type real: su; 
		type real: ics;
	endrecord

    record #grss
		type real: su; 
		type #supa: rec;
	endrecord

    type real: c2;

    return;
end

_sumN 
input parameter list [int d5]
output parameter list [int b3];
    record #asdd
		type real: su; 
		type real: ics;
	endrecord

    definetype record #asds as #supa
    definetype record #asds as #fusj

    record #gras
		type real: su; 
		type #supa: rec;
	endrecord

    type real: c2;

    return;
end

_main
    record #marks
		type real : maths; 
		type real: physics; 
		type real: chemistry;
	endrecord

    record #ma
		type real: em; 
		type real: ha; 
	endrecord

    definetype record #marks as #grades

    type int: b2 : global;
    type real: d2 : global;
    type #grades: c2;
    type record #marks: b3;
%
%     b5 <--- 5.55 / (3 + 1) * 2;
%
%    read(d2);
%
%    [b2] <--- call _random with parameters [d2, b2];
%
%    while ((b2 > d2) @@@ (b2 < d2))
%        read(b2);
%        b2 <--- 3;
%    endwhile
%
%    if (~ (b2 < d2)) then
%        read(b2);
%        b2 <--- b2 * 2;
%    else
%        write(b2);
%    endif
%    
   return [b2, d2];
end
